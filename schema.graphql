scalar Date

type Book {
  id: Int!
  title: String!
  author: String!
  coverImageUrl: String!
  publisher: String!
  synopsis: String!
  pageCount: Int!
}

type ListItem {
  id: Int!
  title: String!
  author: String!
  coverImageUrl: String!
  publisher: String!
  synopsis: String!
  pageCount: Int!
  startDate: Date!
  finishDate: Date!
  rating: Int!
}

type User {
  id: Int
  email: String
  listItems: [ListItem]
}

type Query {
  books(query: String): [Book]
  user: User
}

type Mutation {
  register(email: String!, password: String!): User
  login(email: String!, password: String!): User
  logout: User
  createListItem(listItem: ListItemInput!): ListItem
}

input ListItemInput {
  id: Int!
  title: String!
  author: String!
  coverImageUrl: String!
  publisher: String!
  synopsis: String!
  pageCount: Int!
  startDate: Date!
  finishDate: Date!
  rating: Int!
}
